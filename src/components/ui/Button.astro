---
import type { HTMLAttributes, HTMLTag, Polymorphic } from "astro/types";
import { cva, type VariantProps } from "class-variance-authority";

import { cn } from "~/lib/utils";

const buttonVariants = cva(
  "inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
  {
    variants: {
      variant: {
        default: "",
        ghost: "hover:bg-white/5",
      },
      size: {
        default: "h-10 px-4 py-2",
        sm: "h-9 rounded-md px-3",
        lg: "h-11 rounded-md px-8",
        icon: "h-8 w-8",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
);

export type Props<Tag extends HTMLTag = "button"> = Polymorphic<{ as: Tag }> &
  VariantProps<typeof buttonVariants>;

const {
  as: Comp = "button",
  class: className,
  variant = "default",
  size = "default",
  ...attrs
} = Astro.props;
---

<Comp class={cn(buttonVariants({ variant, size }), className)} {...attrs}>
  <slot />
</Comp>
